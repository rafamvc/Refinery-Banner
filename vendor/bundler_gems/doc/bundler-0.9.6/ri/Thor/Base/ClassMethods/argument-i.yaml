--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Adds an argument to the class and creates an attr_accessor for it.
- !ruby/struct:SM::Flow::P 
  body: "Arguments are different from options in several aspects. The first one is how they are parsed from the command line, arguments are retrieved from position:"
- !ruby/struct:SM::Flow::VERB 
  body: "  thor task NAME\n"
- !ruby/struct:SM::Flow::P 
  body: "Instead of:"
- !ruby/struct:SM::Flow::VERB 
  body: "  thor task --name=NAME\n"
- !ruby/struct:SM::Flow::P 
  body: Besides, arguments are used inside your code as an accessor (self.argument), while options are all kept in a hash (self.options).
- !ruby/struct:SM::Flow::P 
  body: Finally, arguments cannot have type :default or :boolean but can be optional (supplying :optional =&gt; :true or :required =&gt; false), although you cannot have a required argument after a non-required argument. If you try it, an error is raised.
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Parameters
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "name<Symbol>:"
    body: The name of the argument.
  - !ruby/struct:SM::Flow::LI 
    label: "options<Hash>:"
    body: Described below.
  type: :NOTE
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Options
- !ruby/struct:SM::Flow::P 
  body: ":desc - Description for the argument. :required - If the argument is required or not. :optional - If the argument is optional or not. :type - The type of the argument, can be :string, :hash, :array, :numeric. :default - Default value for this argument. It cannot be required and have default values. :banner - String to show on usage notes."
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Errors
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "ArgumentError:"
    body: Raised if you supply a required argument after a non required one.
  type: :NOTE
full_name: Thor::Base::ClassMethods#argument
is_singleton: false
name: argument
params: (name, options={})
visibility: public
